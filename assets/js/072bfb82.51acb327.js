"use strict";(self.webpackChunkjuggin=self.webpackChunkjuggin||[]).push([[9971],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||i;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6071:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:1,sidebar_label:"General Info"},a=void 0,s={unversionedId:"ESX/SickReports/Installation",id:"ESX/SickReports/Installation",title:"Installation",description:"SickReports",source:"@site/docs/ESX/SickReports/Installation.md",sourceDirName:"ESX/SickReports",slug:"/ESX/SickReports/Installation",permalink:"/docs/ESX/SickReports/Installation",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"General Info"},sidebar:"tutorialSidebar",previous:{title:"Pictures",permalink:"/docs/ESX/SickLockers/Pictures"},next:{title:"Admin Options",permalink:"/docs/ESX/SickReports/Options"}},l={},c=[{value:"SickReports",id:"sickreports",level:2}],p={toc:c},u="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"sickreports"},"SickReports"),(0,o.kt)("p",null,"Welcome to SickReports. A Simple System for Admins and players to use to help keep track of bugs/players and other general info. Everything is saved in a JSON file\nFor Easier access instead of Database queries saves and deletes. Currently Delete sets the report inactive in the JSON file which will prevent it from being in the menu\nbut will need to be removed manually until I sort that out better! "),(0,o.kt)("h1",{id:"config"},"Config"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Config" showLineNumbers',title:'"Config"',showLineNumbers:!0},"Config = {}\n\nConfig.wasabi_ambulance = true -- if false put your event below. uses Player.source for WHO to revive\n\nConfig.ReviveEvent = 'esx_ambulancejob:revive' -- only if not using wasabi_ambulance!\n\nConfig.Notifications = {\n    client = 'ox',\n    server = 'ox'\n}\n\nConfig.CommandInfo = {\n\n    ['open'] = {\n\n        command = 'openReport',\n\n    },\n\n    ['adminOpen'] = {\n\n        command = 'adminReports'\n\n    }\n    \n}\n\nConfig.AllowedGroups = {\n\n    [\"admin\"] = true,\n    -- add more if you wish to add other groups\n    -- [\"mod\"] = true\n}\n")),(0,o.kt)("admonition",{title:"Dependencies",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"~ Ox_libs ",(0,o.kt)("br",null),"\n~ ESX For Admin Groups")))}f.isMDXComponent=!0}}]);