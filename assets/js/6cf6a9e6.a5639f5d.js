"use strict";(self.webpackChunkjuggin=self.webpackChunkjuggin||[]).push([[267],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>u});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=o.createContext({}),f=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=f(e.components);return o.createElement(c.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},y=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=f(t),y=i,u=p["".concat(c,".").concat(y)]||p[y]||g[y]||r;return t?o.createElement(u,a(a({ref:n},l),{},{components:t})):o.createElement(u,a({ref:n},l))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=y;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var f=2;f<r;f++)a[f]=t[f];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}y.displayName="MDXCreateElement"},1604:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>f});var o=t(7462),i=(t(7294),t(3905));const r={sidebar_position:2,sidebar_label:"Events/Exports"},a=void 0,s={unversionedId:"ESX/SickDirtyCops/Config",id:"ESX/SickDirtyCops/Config",title:"Config",description:"Config",source:"@site/docs/ESX/SickDirtyCops/Config.md",sourceDirName:"ESX/SickDirtyCops",slug:"/ESX/SickDirtyCops/Config",permalink:"/docs/ESX/SickDirtyCops/Config",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Events/Exports"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/ESX/SickDirtyCops/Installation"},next:{title:"Pictures",permalink:"/docs/ESX/SickDirtyCops/Pictures"}},c={},f=[{value:"Config",id:"config",level:2},{value:"Client",id:"client",level:2},{value:"Server",id:"server",level:2},{value:"Events/Exports",id:"eventsexports",level:2}],l={toc:f},p="wrapper";function g(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"config"},"Config"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title='Config.lua'",title:"'Config.lua'"},"Config = {}\n\nConfig.MenuType = 'ox_libs'\n\nConfig.Price = 5000 -- price for checking cops AND making inventory\nConfig.TruckPrice = 5000 -- price to check info on the truck heist\nConfig.Inventory = 'ox'\nConfig.Target = 'ox_target'\nConfig.TruckUSB = 'greenusb'\nConfig.PoliceJobName = {\n    'police'\n}\nConfig.CashAccount = 'black_money'\nConfig.TruckAccount = 'black_money'\nConfig.NotificationType = { --['okokNotify' / 'mythic' / 'esx' / 'chat' / 'custom' ]\n    client = 'okokNotify', \n    server = 'okokNotify'\n}\n\nConfig.GreenDongle = 'greenusb' -- item needed to open the Menu\n\nConfig.InventoryOptions = { \n    inventoryType = \"inventory\",\n    inventorySubType = \"housing\",\n    inventoryLabel = \"drop_box\",\n    maxWeight = 100.0,\n    maxSlots = 10,\n    OxLabel = \"Drop Box\" -- If using ox inventory this matters if not its nothing\n}\n\nConfig.Peds = {\n    [1] = {\n        Name = \"Zeus Almighty\",\n        TargetName = 'illegal_shop1',\n        SpawnName = 'IG_RoccoPelosi',\n        location = vector4(-218.7603, 317.5758, 96.0402,230.7158),\n        OpenTime = 1, -- Open Time\n        CloseTime = 8, -- Closing Time\n    },\n}\n\nConfig.TruckInfo = {\n    TruckPrice = 5000,\n    TruckLocation = vector3(569.46, -3127.42, 18.77)\n}\n\nConfig.RobberyList = {\n    [1] = {\n        Header = \"Fleeca Banks\",\n        icon = 'fa-solid fa-bank',\n        minCops = 0,\n        bank = true,\n    },\n    [2] = {\n        Header = \"Store robbery\",\n        icon = 'fa-solid fa-store',\n        minCops = 0,\n        bank = false, -- some just need to be here to help script function without error\n    },\n    [3] = {\n        Header = \"Pacific Bank\",\n        icon = 'fa-solid fa-bank',\n        minCops = 0,\n        bank = true,\n    },\n    [4] = {\n        Header = \"House Robbery\",\n        icon = 'fa-solid fa-house',\n        minCops = 0,\n        bank = false, -- some just need to be here to help script function without error\n    },\n    [5] = {\n        Header = \"Truck Heist\",\n        icon = 'fa-solid fa-truck',\n        minCops = 0,\n        bank = false,\n    },\n}\n")),(0,i.kt)("h2",{id:"client"},"Client"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Notifications"',title:'"Notifications"'},"function Cnotify(noty_type, message)\n    if noty_type and message then\n        if Config.NotificationType.client == 'esx' then\n            ESX.ShowNotification(message)\n\n        elseif Config.NotificationType.client == 'okokNotify' then\n            if noty_type == 1 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'success')\n            elseif noty_type == 2 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'info')\n            elseif noty_type == 3 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'error')\n            end\n\n        elseif Config.NotificationType.client == 'mythic' then\n            if noty_type == 1 then\n                exports['mythic_notify']:SendAlert('success', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            elseif noty_type == 2 then\n                exports['mythic_notify']:SendAlert('inform', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            elseif noty_type == 3 then\n                exports['mythic_notify']:SendAlert('error', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            end\n\n        elseif Config.NotificationType.client == 'chat' then\n            TriggerEvent('chatMessage', message)\n            \n        elseif Config.NotificationType.client == 'other' then\n            --add your own notification.\n            \n        end\n    end\nend\n")),(0,i.kt)("h2",{id:"server"},"Server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"title='Notifications'",title:"'Notifications'"},"function Cnotify(noty_type, message)\n    if noty_type and message then\n        if Config.NotificationType.client == 'esx' then\n            ESX.ShowNotification(message)\n\n        elseif Config.NotificationType.client == 'okokNotify' then\n            if noty_type == 1 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'success')\n            elseif noty_type == 2 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'info')\n            elseif noty_type == 3 then\n                exports['okokNotify']:Alert(\"Dongle\", message, 10000, 'error')\n            end\n\n        elseif Config.NotificationType.client == 'mythic' then\n            if noty_type == 1 then\n                exports['mythic_notify']:SendAlert('success', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            elseif noty_type == 2 then\n                exports['mythic_notify']:SendAlert('inform', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            elseif noty_type == 3 then\n                exports['mythic_notify']:SendAlert('error', message, { ['background-color'] = '#ffffff', ['color'] = '#000000' })\n            end\n\n        elseif Config.NotificationType.client == 'chat' then\n            TriggerEvent('chatMessage', message)\n            \n        elseif Config.NotificationType.client == 'other' then\n            --add your own notification.\n            \n        end\n    end\nend\n")),(0,i.kt)("h2",{id:"eventsexports"},"Events/Exports"),(0,i.kt)("admonition",{title:"Events",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"These Events can be triggered to set the Robbery Status of Banks that will show in the menu letting Players know if the bank is ready to be robbed or not!"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Server Event"',title:'"Server','Event"':!0},"TriggerClientEvent('dongle:UpdateRobberyChecks', source, BOOLEN) --BOOLEN = (true or false)\n\n")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Client Event"',title:'"Client','Event"':!0},"TriggerEvent('dongle:UpdateRobberyChecks', BOOLEN) --BOOLEN = (true or false)\n"))))}g.isMDXComponent=!0}}]);